{"version":3,"sources":["core/FormikDebugger/component.jsx","core/App/styles.js","common/Typography/styles.js","common/Typography/component.jsx","common/Checkbox/styles.js","common/Checkbox/component.jsx","common/Paper/styles.js","common/Paper/component.jsx","common/TableContainer/styles.js","common/TableContainer/component.jsx","common/TableBody/styles.js","common/TableBody/component.jsx","common/TableRow/styles.js","common/TableRow/component.jsx","common/TableHead/styles.js","common/TableHead/component.jsx","common/TableCell/styles.js","common/TableCell/component.jsx","common/Button/styles.js","common/Button/component.jsx","common/Container/styles.js","common/Container/component.jsx","common/Form/component.jsx","common/FormActions/styles.js","common/FormActions/component.jsx","common/Table/styles.js","common/Table/component.jsx","common/TextField/styles.js","common/TextField/component.jsx","core/hooks/useFieldError.js","pages/Sampling/styles.js","features/SamplingForm/styles.js","features/SamplingForm/config.js","features/SamplingForm/component.jsx","core/utils/getQueryParam.js","features/SamplingResults/styles.js","features/SamplingResults/component.jsx","pages/Sampling/component.jsx","core/App/component.jsx","core/config/theme.js","serviceWorker.js","index.js"],"names":["FormikDebugger","style","margin","borderRadius","background","boxShadow","textTransform","fontSize","borderTopLeftRadius","borderTopRightRadius","fontWeight","padding","color","letterSpacing","validationSchema","validate","onSubmit","rest","overflowX","JSON","stringify","useStyles","makeStyles","root","Typography","children","restProps","classes","className","marginTop","marginRight","marginLeft","Checkbox","name","label","labelPlacement","useField","field","control","checked","value","Paper","TableContainer","TableBody","TableRow","TableHead","TableCell","Button","Container","Form","initialValues","formikProps","theme","display","flexDirection","justifyContent","spacing","button","minWidth","FormActions","resetForm","useFormikContext","type","variant","onClick","Table","TextField","touched","error","isError","useFieldError","helperText","size","labels","sampleSize","sampleMean","standardDeviation","enableHypothesisTest","hypothesizedMean","Yup","shape","integer","min","required","when","is","thing","then","requiredLabel","SamplingForm","appendSampling","useSampling","debuggerEnabled","key","search","window","location","URLSearchParams","get","getQueryParam","values","helpers","id","shortid","generate","disabled","noResults","width","textAlign","SamplingResults","samplings","clearSamplings","length","component","table","aria-label","align","map","sampling","scope","SamplingContext","createContext","useContext","Sampling","useState","setSamplings","handleClearSamplings","useCallback","handleAppendSampling","contextValues","Provider","App","ThemeProvider","createMuiTheme","maxWidth","Boolean","hostname","match","ReactDOM","render","StrictMode","CssBaseline","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.cd663d3e.chunk.js","sourcesContent":["import React from \"react\";\nimport { FormikConsumer } from \"formik\";\n\nexport const FormikDebugger = () => (\n  <div\n    style={{\n      margin: \"3rem 1rem\",\n      borderRadius: 4,\n      background: \"#f6f8fa\",\n      boxShadow: \"0 0 1px  #eee inset\",\n    }}\n  >\n    <div\n      style={{\n        textTransform: \"uppercase\",\n        fontSize: 11,\n        borderTopLeftRadius: 4,\n        borderTopRightRadius: 4,\n        fontWeight: 500,\n        padding: \".5rem\",\n        background: \"#555\",\n        color: \"#fff\",\n        letterSpacing: \"1px\",\n      }}\n    >\n      Formik State\n    </div>\n    <FormikConsumer>\n      {({ validationSchema, validate, onSubmit, ...rest }) => (\n        <pre\n          style={{\n            fontSize: \".85rem\",\n            padding: \".25rem .5rem\",\n            overflowX: \"scroll\",\n          }}\n        >\n          {JSON.stringify(rest, null, 2)}\n        </pre>\n      )}\n    </FormikConsumer>\n  </div>\n);\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nexport const useStyles = makeStyles(() => ({\n  root: {}\n}));\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nexport const useStyles = makeStyles(() => ({\n  root: {}\n}));\n","import React from \"react\";\nimport { useStyles } from \"./styles\";\nimport * as MUI from \"@material-ui/core\";\n\nexport const Typography = ({ children, ...restProps }) => {\n  const classes = useStyles();\n  return (\n    <MUI.Typography className={classes.root} {...restProps}>\n      {children}\n    </MUI.Typography>\n  );\n};\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nexport const useStyles = makeStyles(() => ({\n  root: {\n    marginTop: 16,\n    marginRight: 0,\n    marginLeft: 0,\n  },\n}));\n","import React from \"react\";\nimport { useStyles } from \"./styles\";\nimport * as MUI from \"@material-ui/core\";\nimport { useField } from \"formik\";\n\nexport const Checkbox = ({\n  children,\n  name,\n  color = \"primary\",\n  label,\n  labelPlacement = \"end\",\n  ...restProps\n}) => {\n  const classes = useStyles();\n  const [field] = useField(name);\n\n  return (\n    <MUI.FormControlLabel\n      className={classes.root}\n      control={<MUI.Checkbox checked={field.value} color={color} />}\n      label={label}\n      labelPlacement={labelPlacement}\n      {...field}\n      {...restProps}\n    />\n  );\n};\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nexport const useStyles = makeStyles(() => ({\n  root: {}\n}));\n","import React from \"react\";\nimport { useStyles } from \"./styles\";\nimport * as MUI from \"@material-ui/core\"\n\nexport const Paper = ({ children, ...restProps }) => {\n  const classes = useStyles();\n  return <MUI.Paper className={classes.root} {...restProps}>{children}</MUI.Paper>;\n};\n\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nexport const useStyles = makeStyles(() => ({\n  root: {}\n}));\n","import React from \"react\";\nimport { useStyles } from \"./styles\";\nimport * as MUI from \"@material-ui/core\"\n\nexport const TableContainer = ({ children, ...restProps }) => {\n  const classes = useStyles();\n  return <MUI.TableContainer className={classes.root} {...restProps}>{children}</MUI.TableContainer>;\n};\n\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nexport const useStyles = makeStyles(() => ({\n  root: {}\n}));\n","import React from \"react\";\nimport { useStyles } from \"./styles\";\nimport * as MUI from \"@material-ui/core\"\n\nexport const TableBody = ({ children, ...restProps }) => {\n  const classes = useStyles();\n  return <MUI.TableBody className={classes.root} {...restProps}>{children}</MUI.TableBody>;\n};\n\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nexport const useStyles = makeStyles(() => ({\n  root: {}\n}));\n","import React from \"react\";\nimport { useStyles } from \"./styles\";\nimport * as MUI from \"@material-ui/core\"\n\nexport const TableRow = ({ children, ...restProps }) => {\n  const classes = useStyles();\n  return <MUI.TableRow className={classes.root} {...restProps}>{children}</MUI.TableRow>;\n};\n\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nexport const useStyles = makeStyles(() => ({\n  root: {}\n}));\n","import React from \"react\";\nimport { useStyles } from \"./styles\";\nimport * as MUI from \"@material-ui/core\"\n\nexport const TableHead = ({ children, ...restProps }) => {\n  const classes = useStyles();\n  return <MUI.TableHead className={classes.root} {...restProps}>{children}</MUI.TableHead>;\n};\n\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nexport const useStyles = makeStyles(() => ({\n  root: {}\n}));\n","import React from \"react\";\nimport { useStyles } from \"./styles\";\nimport * as MUI from \"@material-ui/core\"\n\nexport const TableCell = ({ children, ...restProps }) => {\n  const classes = useStyles();\n  return <MUI.TableCell className={classes.root} {...restProps}>{children}</MUI.TableCell>;\n};\n\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nexport const useStyles = makeStyles(() => ({\n  root: {}\n}));\n","import React from \"react\";\nimport { useStyles } from \"./styles\";\nimport * as MUI from \"@material-ui/core\";\n\nexport const Button = ({ children, ...restProps }) => {\n  const classes = useStyles();\n  return (\n    <MUI.Button className={classes.root} {...restProps}>\n      {children}\n    </MUI.Button>\n  );\n};\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nexport const useStyles = makeStyles(() => ({\n  root: {}\n}));\n","import React from \"react\";\nimport { useStyles } from \"./styles\";\nimport * as MUI from \"@material-ui/core\";\n\nexport const Container = ({ children, ...restProps }) => {\n  const classes = useStyles();\n  return (\n    <MUI.Container className={classes.root} {...restProps}>\n      {children}\n    </MUI.Container>\n  );\n};\n","import React from \"react\";\nimport { Formik, Form as FormikForm } from \"formik\";\n\nexport const Form = ({\n  children,\n  initialValues = {},\n  validationSchema = {},\n  onSubmit = () => undefined,\n  className,\n  ...restProps\n}) => {\n  return (\n    <Formik\n      className={restProps.className}\n      initialValues={initialValues}\n      validationSchema={validationSchema}\n      onSubmit={onSubmit}\n      {...restProps}\n    >\n      {(formikProps) => (\n        <FormikForm className={className}>{children(formikProps)}</FormikForm>\n      )}\n    </Formik>\n  );\n};\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nexport const useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"flex-end\",\n    marginTop: theme.spacing(2),\n  },\n  button: {\n    minWidth: 120,\n    \"&:not(last-child)\": {\n      marginLeft: theme.spacing(2),\n    },\n  },\n}));\n","import React from \"react\";\nimport { useStyles } from \"./styles\";\nimport { Button, Container } from \"common\";\nimport { useFormikContext } from \"formik\";\n\nexport const FormActions = () => {\n  const classes = useStyles();\n  const { resetForm } = useFormikContext();\n  const handleReset = () => resetForm({});\n\n  return (\n    <Container className={classes.root}>\n      <Button\n        className={classes.button}\n        type=\"submit\"\n        variant=\"contained\"\n        color=\"primary\"\n      >\n        Ok\n      </Button>\n      <Button\n        className={classes.button}\n        onClick={handleReset}\n        variant=\"outlined\"\n      >\n        Reset\n      </Button>\n    </Container>\n  );\n};\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nexport const useStyles = makeStyles(() => ({\n  root: {}\n}));\n","import React from \"react\";\nimport { useStyles } from \"./styles\";\nimport * as MUI from \"@material-ui/core\"\n\nexport const Table = ({ children, ...restProps }) => {\n  const classes = useStyles();\n  return <MUI.Table className={classes.root} {...restProps}>{children}</MUI.Table>;\n};\n\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nexport const useStyles = makeStyles((theme) => ({\n  root: {\n    marginTop: theme.spacing(2),\n  },\n}));\n","import React from \"react\";\nimport { useStyles } from \"./styles\";\nimport { useField } from \"formik\";\nimport { useFieldError } from \"core/hooks\";\nimport * as MUI from \"@material-ui/core\";\n\nexport const TextField = ({ children, name, ...restProps }) => {\n  const classes = useStyles();\n  const [field, meta] = useField(name);\n  const [error, helperText] = useFieldError(meta);\n  return (\n    <MUI.TextField\n      {...field}\n      {...restProps}\n      size=\"small\"\n      variant=\"outlined\"\n      error={error}\n      helperText={helperText}\n      className={classes.root}\n    />\n  );\n};\n","export function useFieldError({ touched, error }) {\n  const isError = touched && !!error;\n  const helperText = isError && error;\n  return [isError, helperText];\n}\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nexport const useStyles = makeStyles(() => ({\n  root: {},\n}));\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nexport const useStyles = makeStyles(() => ({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n}));\n","import * as Yup from \"yup\";\n\nexport const labels = {\n  SAMPLE_SIZE: \"Sample Size\",\n  SAMPLE_MEAN: \"Sample Mean\",\n  STANDARD_DEVIATION: \"Standard Deviation\",\n  HYPOTHESIZED_MEAN: \"Hypothesized Mean\",\n  PERFORM_HYPOTHESIS_TEST: \"Perform Hypothesis Test\",\n};\n\nexport const initialValues = {\n  sampleSize: \"\",\n  sampleMean: \"\",\n  standardDeviation: \"\",\n  enableHypothesisTest: false,\n  hypothesizedMean: \"\",\n};\n\nexport const validationSchema = Yup.object().shape({\n  sampleSize: Yup.number()\n    .integer(`${labels.SAMPLE_SIZE} must be a whole number`)\n    .min(2)\n    .required()\n    .label(labels.SAMPLE_SIZE),\n  sampleMean: Yup.number().required().label(labels.SAMPLE_MEAN),\n  standardDeviation: Yup.number()\n    .required()\n    .min(1, `${labels.STANDARD_DEVIATION} must be greater than 0`)\n    .label(labels.STANDARD_DEVIATION),\n  enableHypothesisTest: Yup.boolean(),\n  hypothesizedMean: Yup.number().when(\"enableHypothesisTest\", {\n    is: (thing) => thing,\n    then: Yup.number().required().label(labels.HYPOTHESIZED_MEAN),\n  }),\n});\n","import React from \"react\";\nimport { useStyles } from \"./styles\";\nimport { TextField, Checkbox, FormActions, Form } from \"common\";\nimport { FormikDebugger } from \"core\";\nimport { useSampling } from \"pages/Sampling\";\nimport shortid from \"shortid\";\nimport { getQueryParam } from \"../../core/utils/getQueryParam\";\nimport { validationSchema, initialValues, labels } from \"./config\";\n\nexport const requiredLabel = (label) => `${label} *`;\n\nexport const SamplingForm = () => {\n  const classes = useStyles();\n  const { appendSampling } = useSampling();\n  const debuggerEnabled = getQueryParam(\"debugger\") === \"enabled\";\n\n  const handleSubmit = (values, helpers) => {\n    appendSampling({ id: shortid.generate(), ...values });\n    helpers.resetForm();\n  };\n\n  return (\n    <Form\n      className={classes.root}\n      initialValues={initialValues}\n      validationSchema={validationSchema}\n      onSubmit={handleSubmit}\n    >\n      {({ values }) => (\n        <>\n          <TextField\n            name=\"sampleSize\"\n            label={requiredLabel(labels.SAMPLE_SIZE)}\n            type=\"number\"\n          />\n          <TextField\n            name=\"sampleMean\"\n            label={requiredLabel(labels.SAMPLE_MEAN)}\n            type=\"number\"\n          />\n          <TextField\n            name=\"standardDeviation\"\n            label={requiredLabel(labels.STANDARD_DEVIATION)}\n            type=\"number\"\n          />\n          <Checkbox\n            name=\"enableHypothesisTest\"\n            label={labels.PERFORM_HYPOTHESIS_TEST}\n          />\n          <TextField\n            name=\"hypothesizedMean\"\n            label={\n              values.enableHypothesisTest\n                ? requiredLabel(labels.HYPOTHESIZED_MEAN)\n                : labels.HYPOTHESIZED_MEAN\n            }\n            type=\"number\"\n            disabled={!values.enableHypothesisTest}\n          />\n          <FormActions />\n          {debuggerEnabled && <FormikDebugger />}\n        </>\n      )}\n    </Form>\n  );\n};\n","// If I was using react router I would just use the hook,\n// but in the case of this take home it's a bit simpler to use,\n// this small util function.\nexport const getQueryParam = (key) => {\n  const search = window.location.search;\n  const params = new URLSearchParams(search);\n  return params.get(key);\n};\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nexport const useStyles = makeStyles((theme) => ({\n  root: {},\n  noResults: {\n    width: \"100%\",\n    textAlign: \"center\",\n    padding: theme.spacing(2),\n  },\n}));\n","import React from \"react\";\nimport { useStyles } from \"./styles\";\nimport {\n  Paper,\n  Table,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableBody,\n} from \"common\";\nimport { useSampling } from \"pages/Sampling\";\nimport { Button } from \"common\";\nimport { Typography } from \"../../common/Typography/component\";\n\nexport const SamplingResults = () => {\n  const classes = useStyles();\n  const { samplings, clearSamplings } = useSampling();\n\n  return (\n    <>\n      <Button disabled={!samplings.length} onClick={() => clearSamplings()}>\n        Clear\n      </Button>\n      <TableContainer component={Paper}>\n        <Table className={classes.table} aria-label=\"simple table\">\n          <TableHead>\n            <TableRow>\n              <TableCell>Sample Size</TableCell>\n              <TableCell align=\"right\">Sample Mean</TableCell>\n              <TableCell align=\"right\">Standard Deviation</TableCell>\n              <TableCell align=\"right\">Hypothesized Mean</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {samplings.map((sampling) => (\n              <TableRow key={sampling.id}>\n                <TableCell component=\"th\" scope=\"row\">\n                  {sampling.sampleSize}\n                </TableCell>\n                <TableCell align=\"right\">{sampling.sampleMean}</TableCell>\n                <TableCell align=\"right\">\n                  {sampling.standardDeviation}\n                </TableCell>\n                <TableCell align=\"right\">\n                  {sampling.hypothesizedMean || \"N/A\"}\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n        {!samplings.length && (\n          <Typography className={classes.noResults}>\n            No Samplings Results\n          </Typography>\n        )}\n      </TableContainer>\n    </>\n  );\n};\n","import React, { useState, createContext, useCallback, useContext } from \"react\";\nimport { useStyles } from \"./styles\";\nimport { Container } from \"common\";\nimport { SamplingForm, SamplingResults } from \"features\";\n\nconst SamplingContext = createContext({\n  samplings: [],\n  appendSampling: () => undefined,\n  clearSamplings: () => undefined,\n});\n\nexport const useSampling = () => useContext(SamplingContext);\n\nexport const Sampling = ({ children, ...restProps }) => {\n  const classes = useStyles();\n  const [samplings, setSamplings] = useState([]);\n  const handleClearSamplings = useCallback(() => setSamplings([]), []);\n  const handleAppendSampling = useCallback(\n    (values) => setSamplings([...samplings, values]),\n    [samplings]\n  );\n\n  const contextValues = {\n    samplings,\n    appendSampling: handleAppendSampling,\n    clearSamplings: handleClearSamplings,\n  };\n\n  return (\n    <Container className={classes.root} {...restProps}>\n      <SamplingContext.Provider value={contextValues}>\n        <SamplingForm />\n        <SamplingResults />\n      </SamplingContext.Provider>\n    </Container>\n  );\n};\n","import React from \"react\";\nimport { useStyles } from \"./styles\";\nimport { Container } from \"common\";\nimport { Sampling } from \"pages\";\nimport { ThemeProvider } from \"@material-ui/core\";\nimport { createTheme } from \"core/config/theme\";\n\nexport const App = () => {\n  const classes = useStyles();\n  return (\n    <ThemeProvider theme={createTheme()}>\n      <Container maxWidth=\"md\" className={classes.root}>\n        <Sampling />\n      </Container>\n    </ThemeProvider>\n  );\n};\n","import { createMuiTheme } from \"@material-ui/core\";\n\nexport const createTheme = () => createMuiTheme({});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { App } from \"./core\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { CssBaseline } from \"@material-ui/core\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <CssBaseline />\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}